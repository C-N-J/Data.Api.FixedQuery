PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX : @schemaUri

CONSTRUCT {
    ?question
        a :Question ;
        :questionText ?questionText ;
        :questionAskedAt ?questionAskedAt ;
        :questionHasAskingPerson ?askingPerson ;
        :questionHasAnsweringBodyAllocation ?answeringBodyAllocation ;
        :questionHeading ?questionHeading ;
        :questionHasAnswer ?answer .
    ?answer
        a :Answer ;
        :answerText ?answerText ;
        :answerGivenDate ?answerGivenDate ;
        :answerHasAnsweringPerson ?answeringPerson .
    ?answeringPerson
        a :Person ;
        :personGivenName ?answeringPersonGivenName ;
        :personOtherNames ?answeringPersonOtherNames ;
        :personFamilyName ?answeringPersonFamilyName ;
        :governmentPersonHasGovernmentIncumbency ?answeringPersonGovernmentIncumbency ;
        :memberHasMemberImage ?answeringMemberImage .
    ?answeringPersonGovernmentIncumbency
        a :GovernmentIncumbency ;
        :incumbencyStartDate ?answeringPersonIncumbencyStartDate ;
        :incumbencyEndDate ?answeringPersonIncumbencyEndDate ;
        :governmentIncumbencyHasGovernmentPosition ?governmentPosition .
    ?governmentPosition
        a :GovernmentPosition ;
        :positionName ?positionName .
    ?answeringBodyAllocation
        a :AnsweringBodyAllocation ;
        :answeringBodyAllocationHasAnsweringBody ?answeringBody .
    ?answeringBody
        a :Group ;
        :groupName ?groupName .
    ?askingPerson
        a :Person ;
        :personGivenName ?askingPersonGivenName ;
        :personOtherNames ?askingPersonOtherNames ;
        :personFamilyName ?askingPersonFamilyName ;
        :memberHasParliamentaryIncumbency ?askingPersonSeatIncumbency ;
        :memberHasMemberImage ?askingMemberImage .
    ?askingPersonSeatIncumbency
        a :SeatIncumbency ;
        :parliamentaryIncumbencyStartDate ?askingPersonIncumbencyStartDate ;
        :parliamentaryIncumbencyEndDate ?askingPersonIncumbencyEndDate ;
        :seatIncumbencyHasHouseSeat ?houseSeat .
    ?houseSeat a :HouseSeat ;
        :houseSeatHasHouse ?house ;
        :houseSeatHasConstituencyGroup ?constituencyGroup .
    ?constituencyGroup
        a :ConstituencyGroup ;
        :constituencyGroupName ?constituencyGroupName .
}
WHERE {
    BIND(@question_id AS ?question)
    ?question
        a :Question ;
        :questionText ?questionText ;
        :questionAskedAt ?questionAskedAt ;
        :questionHasAskingPerson ?askingPerson ;
        :questionHasAnsweringBodyAllocation ?answeringBodyAllocation .
    OPTIONAL { ?question :questionHeading ?questionHeading . }

        OPTIONAL {
            ?question :questionHasAnswer ?answer .
            ?answer
                a :Answer ;
                :answerText ?answerText ;
                :answerGivenDate ?answerGivenDate .

                OPTIONAL {
                    ?answer
                    	:answerHasAnsweringPerson ?answeringPerson ;
                    	:answerHasAnsweringBody ?answeringBody2 .
                    ?answeringPerson
                    a :Person ;
                    :governmentPersonHasGovernmentIncumbency ?answeringPersonGovernmentIncumbency .
                    OPTIONAL { ?answeringPerson :personGivenName ?answeringPersonGivenName . }
                    OPTIONAL { ?answeringPerson :personFamilyName ?answeringPersonFamilyName . }
                    OPTIONAL { ?answeringPerson :personOtherNames ?answeringPersonOtherNames . }
                    OPTIONAL { ?answeringPerson :memberHasMemberImage ?answeringMemberImage . }
                    ?answeringPersonGovernmentIncumbency
                        a :GovernmentIncumbency ;
                        :governmentIncumbencyHasGovernmentPosition ?governmentPosition ;
                        :incumbencyStartDate ?answeringPersonIncumbencyStartDate .
                   ?governmentPosition
                        a :GovernmentPosition ;
                        :positionHasGroup ?answeringBody2 ;
                        :positionName ?positionName .
                    OPTIONAL { ?answeringPersonGovernmentIncumbency :incumbencyEndDate ?answeringPersonIncumbencyEndDate. }
                    BIND(xsd:dateTime(?answerGivenDate) AS ?answerGivenDate2)
                    BIND(xsd:dateTime(?answeringPersonIncumbencyEndDate) AS ?answeringPersonIncumbencyEndDate2)
                    BIND(xsd:dateTime(?answeringPersonIncumbencyStartDate) AS ?answeringPersonIncumbencyStartDate2)
                    BIND(COALESCE(?answeringPersonIncumbencyEndDate2,now()) AS ?answeringPersonIncumbencyEndDate3)
                    filter ( ?answeringPersonIncumbencyEndDate3 > ?answerGivenDate2 && ?answeringPersonIncumbencyStartDate2 <= ?answerGivenDate2)

            }
        }
    ?answeringBodyAllocation
        a :AnsweringBodyAllocation ;
        :answeringBodyAllocationHasAnsweringBody ?answeringBody .
    ?answeringBody
        a :Group ;
        :groupName ?groupName .
    ?askingPerson
        a :Person ;
        :memberHasParliamentaryIncumbency ?askingPersonSeatIncumbency .
    OPTIONAL { ?askingPerson :personGivenName ?askingPersonGivenName . }
    OPTIONAL { ?askingPerson :personFamilyName ?askingPersonFamilyName . }
    OPTIONAL { ?askingPerson :personOtherNames ?askingPersonOtherNames . }
    OPTIONAL { ?askingPerson :memberHasMemberImage ?askingMemberImage . }
    ?askingPersonSeatIncumbency
        a :SeatIncumbency ;
        :parliamentaryIncumbencyStartDate ?askingPersonIncumbencyStartDate .
    OPTIONAL { ?askingPersonSeatIncumbency :parliamentaryIncumbencyEndDate ?askingPersonIncumbencyEndDate. }
    BIND(xsd:dateTime(?questionAskedAt) AS ?questionAskedAt2)
    BIND(xsd:dateTime(?askingPersonIncumbencyEndDate) AS ?askingPersonIncumbencyEndDate2)
    BIND(xsd:dateTime(?askingPersonIncumbencyStartDate) AS ?askingPersonIncumbencyStartDate2)
    BIND(COALESCE(?askingPersonIncumbencyEndDate2,now()) AS ?askingPersonIncumbencyEndDate3)
    filter ( ?askingPersonIncumbencyEndDate3 > ?questionAskedAt2 && ?askingPersonIncumbencyStartDate2 <= ?questionAskedAt2)
    ?askingPersonSeatIncumbency :seatIncumbencyHasHouseSeat ?houseSeat .
    ?houseSeat
        a :HouseSeat ;
        :houseSeatHasHouse ?house .

    OPTIONAL {
        ?houseSeat :houseSeatHasConstituencyGroup ?constituencyGroup.
        ?constituencyGroup
            a :ConstituencyGroup ;
            :constituencyGroupName ?constituencyGroupName .
    }
}